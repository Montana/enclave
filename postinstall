cat << "EOF"
Thank you for using...
                 _
  ___ _ __   ___| | __ ___   _____
 / _ \ '_ \ / __| |/ _` \ \ / / _ \
|  __/ | | | (__| | (_| |\ V /  __/
 \___|_| |_|\___|_|\__,_| \_/ \___|

EOF
echo -e "\x1b[35mWhere is the file you want enclave to use as your entry point? \x1b[0m"
read answer
    printf "{ \n  \"entry\": \"$answer\",\n" > '../../.enclaverc'

echo -e "\x1b[36mWhat directory do you want to have enclave output to? \x1b[0m"
read answer
    printf "  \"output\": \"$answer\",\n" >> '../../.enclaverc'

echo -e "\x1b[34mWhat port do you want your app to run on? \x1b[0m"
read answer
    printf "  \"port\": \"$answer\",\n" >> '../../.enclaverc'

echo -e "\x1b[32mWhere is your index.html file? \x1b[0m"
read answer
    printf "  \"index\": \"$answer\",\n" >> '../../.enclaverc'

node add-script.js

while true; do
    read -p "Do you want to enable live reload? y/n " yn
    case $yn in
        [Yy]* ) printf "  \"live\": \"true\",\n}" >> '../../.enclaverc'; break;;
        [Nn]* ) printf "  \"live\": \"false\",\n}" >> '../../.enclaverc'; exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo -e "\x1b[25mWoo you're done! \x1b[0m"
echo -e "\x1b[35mIf you need to edit any of the answers you gave, head over to the .enclaverc file in your app! \x1b[0m"
echo -e "\x1b[32mTo run your app type: \x1b[1m$ npm start\x1b[0m"
